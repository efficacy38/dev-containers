FROM base-ct:latest

USER root

# Install poetry dependencies
RUN apt-get update 

# install neovim 8.3 binary from github
RUN curl -LO https://github.com/neovim/neovim/releases/download/v0.8.3/nvim-linux64.deb && \
		dpkg -i nvim-linux64.deb && \
		rm nvim-linux64.deb

# python dependencies
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev liblzma-dev python3-openssl python3-distutils python3-poetry

# ssl libraries
RUN apt-get install -y libssl-dev libffi-dev

# base dev tools
RUN apt-get install -y man wget curl make build-essential ripgrep rsync git ssh tldr

# Install user tools
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
		install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

# Install golang
RUN apt-get install -y golang-go

# install nvm and nodejs
RUN apt-get install -y nodejs npm 

# FIXME: Stash packages(needs to archive the packages and restore them on chezmoi apply)
RUN apt-get install -y fzf ripgrep xclip wl-clipboard binutils bison gcc make podman containers-storage

# Initialize podman in podman
ARG _REPO_URL="https://raw.githubusercontent.com/containers/podman/main/contrib/podmanimage/stable"
ADD $_REPO_URL/containers.conf /etc/containers/containers.conf
ADD $_REPO_URL/podman-containers.conf /home/efficacy38/.config/containers/containers.conf

RUN echo "efficacy38:1:999\nefficacy38:1001:64535" > /etc/subuid; \
    echo "efficacy38:1:999\nefficacy38:1001:64535" > /etc/subgid;

RUN mkdir -p /home/efficacy38/.local/share/containers && \
    chown efficacy38:efficacy38 -R /home/efficacy38 && \
    chmod 644 /etc/containers/containers.conf

RUN sed -e 's|^#mount_program|mount_program|g' \
           -e '/additionalimage.*/a "/var/lib/shared",' \
           -e 's|^mountopt[[:space:]]*=.*$|mountopt = "nodev,fsync=0"|g' \
           /usr/share/containers/storage.conf \
           > /etc/containers/storage.conf

RUN mkdir -p /var/lib/shared/overlay-images \
             /var/lib/shared/overlay-layers \
             /var/lib/shared/vfs-images \
             /var/lib/shared/vfs-layers && \
    touch /var/lib/shared/overlay-images/images.lock && \
    touch /var/lib/shared/overlay-layers/layers.lock && \
    touch /var/lib/shared/vfs-images/images.lock && \
    touch /var/lib/shared/vfs-layers/layers.lock

ADD entrypoint.sh /entrypoint.sh

USER efficacy38
WORKDIR /home/efficacy38

# Install chezmoi
RUN curl -sfL https://git.io/chezmoi | sh

# Initialize chezmoi
RUN /home/efficacy38/bin/chezmoi init https://github.com/efficacy38/chezmoi-dotfile.git && \
		/home/efficacy38/bin/chezmoi apply

# install nvm
RUN	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash && \
		/bin/bash -c "source ~/.nvm/nvm.sh && nvm install node"

# install gvm
RUN curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer | bash
RUN zsh -c 'source ~/.zshrc && gvm install go1.21 && gvm use go1.21'

# zsh as default shell
ENTRYPOINT ["/entrypoint.sh"]
